// SPDX-FileCopyrightText: 2024 C. J. Howard
// SPDX-License-Identifier: GPL-3.0-or-later

#ifndef ANTKEEPER_RENDER_CONTEXT_HPP
#define ANTKEEPER_RENDER_CONTEXT_HPP

#include <engine/math/vector.hpp>
#include <engine/render/operation.hpp>
#include <vector>

namespace scene
{
	class camera;
	class collection;
	class object_base;
}

namespace render {

/// Rendering context.
struct context
{
	/// Pointer to the camera.
	const scene::camera* camera;
	
	/// Collection of scene objects being rendered.
	scene::collection* collection;
	
	/// Current time, in seconds.
	float t;
	
	/// Timestep, in seconds.
	float dt;
	
	/// Subframe interpolation factor.
	float alpha;
	
	/// Objects visible to the active camera.
	std::vector<scene::object_base*> objects;
	
	/// Render operations generated by visible objects.
	std::vector<const operation*> operations;
};

} // namespace render

#endif // ANTKEEPER_RENDER_CONTEXT_HPP
