// SPDX-FileCopyrightText: 2025 C. J. Howard
// SPDX-License-Identifier: GPL-3.0-or-later

#ifndef ANTKEEPER_CONFIG_HPP
#define ANTKEEPER_CONFIG_HPP

#include <cstddef>
#include <engine/math/vector.hpp>

/// Global configuration constants.
namespace config {

/// @name Application config
/// @{

/// Application name string.
inline constexpr const char* application_name = "@PROJECT_NAME@";

/// Application slug string.
inline constexpr const char* application_slug = "$<LOWER_CASE:@PROJECT_NAME@>";

/// Application major version number.
inline constexpr int application_version_major = @PROJECT_VERSION_MAJOR@;

/// Application minor version number.
inline constexpr int application_version_minor = @PROJECT_VERSION_MINOR@;

/// Application patch version number.
inline constexpr int application_version_patch = @PROJECT_VERSION_PATCH@;

/// Application build type string.
inline constexpr const char* application_build_type = "$<LOWER_CASE:$<CONFIG>>";

/// Application version string.
inline constexpr const char* application_version = "@PROJECT_VERSION_MAJOR@.@PROJECT_VERSION_MINOR@.@PROJECT_VERSION_PATCH@$<$<CONFIG:Debug>:+$<LOWER_CASE:$<CONFIG>>>";

/// @}

/// @name Debug config
/// @{

/// Maximum number of debug logs to archive.
inline constexpr std::size_t debug_log_archive_capacity = 5;

/// @}

/// @name OpenGL config
/// @{

/// OpenGL major version number, used when creating OpenGL contexts.
inline constexpr int opengl_version_major = 4;

/// OpenGL minor version number, used when creating OpenGL contexts.
inline constexpr int opengl_version_minor = 6;

/// Minimum number of bits in the red channel of the color attachment of the OpenGL default framebuffer.
inline constexpr int opengl_min_red_size = 8;

/// Minimum number of bits in the green channel of the color attachment of the OpenGL default framebuffer.
inline constexpr int opengl_min_green_size = 8;

/// Minimum number of bits in the blue channel of the color attachment of the OpenGL default framebuffer.
inline constexpr int opengl_min_blue_size = 8;

/// Minimum number of bits in the alpha channel of the color attachment of the OpenGL default framebuffer.
inline constexpr int opengl_min_alpha_size = 0;

/// Minimum number of bits in the depth attachment, if any, of the OpenGL default framebuffer.
inline constexpr int opengl_min_depth_size = 0;

/// Minimum number of bits in the stencil attachment, if any, of the OpenGL default framebuffer.
inline constexpr int opengl_min_stencil_size = 0;

/// @}

inline constexpr math::vector<float, 3> global_forward = {0.0f, 0.0f, -1.0f};
inline constexpr math::vector<float, 3> global_up = {0.0f, 1.0f, 0.0f};
inline constexpr math::vector<float, 3> global_right = {1.0f, 0.0f, 0.0f};

/// Duration of the menu fade in animation, in seconds.
inline constexpr float menu_fade_in_duration = 0.25f;

/// Duration of the menu fade out animation, in seconds.
inline constexpr float menu_fade_out_duration = 0.125f;

/// Padding of the a menu item mouseover bounds, as a percentage of the font size.
inline constexpr float menu_mouseover_padding = 0.1f;

/// Opacity of the menu background.
inline constexpr float menu_bg_opacity = 3.0f / 4.0f;

/// RGBA color of active menu items.
inline constexpr math::vector<float, 4> menu_active_color{1.0f, 1.0f, 1.0f, 1.0f};

/// RGBA color of inactive menu items.
inline constexpr math::vector<float, 4> menu_inactive_color{1.0f, 1.0f, 1.0f, 0.5f};

/// Duration of the title screen fade in, in seconds.
inline constexpr float title_fade_in_duration = 1.0f;

/// Duration of the fade out when quitting the game or returning to the main menu, in seconds.
inline constexpr float quit_fade_out_duration = 0.5f;

/// Duration of the fade out when a new colony is started, in seconds.
inline constexpr float new_colony_fade_out_duration = 1.0f;

/// Duration of the nuptial flight fade in, in seconds.
inline constexpr float nuptial_flight_fade_in_duration = 5.0f;

} // namespace config

#endif // ANTKEEPER_CONFIG_HPP
